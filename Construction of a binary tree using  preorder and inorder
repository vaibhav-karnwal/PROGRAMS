import java.io.*;
import java.util.*;

class Node{
    int data;
    Node left,right;
    Node(int data){
        this.data = data;
        this.left = null;
        this.right = null;
    }
}

class Main{
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int[] inorder = new int[n];
        for(int i=0;i<n;i++){
            inorder[i]=scan.nextInt();
        }
        int[] preorder = new int[n];
        Map<Integer,Integer>map = new HashMap<>();
        for(int i=0;i<n;i++){
            preorder[i]=scan.nextInt();
            map.put(preorder[i],i);
        }
        Node root = build(preorder,0,n-1,inorder,0,n-1,map);
    }
    static Node build(int[] preorder,int preStart,int preEnd, int[] inorder,int inStart,int inEnd, Map<Integer,Integer>map ){
        if(preStart>preEnd || inStart>inEnd){
            return null;
        }
        Node root = new Node(preorder[preStart]);
        int inroot = map.get(root.data);
        int numLeft = inroot-inStart;
        root.left=build(preorder,preStart+1,preStart+numLeft,inorder,inStart,inroot-1,map);
        root.right=build(preorder,preStart+numLeft+1,preEnd,inorder,inroot+1,inEnd,map);
        return root;
    }
}
