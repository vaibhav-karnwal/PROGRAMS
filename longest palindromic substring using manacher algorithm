class Solution {
    public String longestPalindrome(String s) {
        int max=0,size=0;
        StringBuilder sb = new StringBuilder();
        StringBuilder ans = new StringBuilder();
        String maxString="";
        for(int i=0;i<s.length();i++){
            sb.append("$");
            sb.append(s.charAt(i));
        }
        sb.append("$");

        for(int i=0;i<sb.length();i++){
            String str = calculateSize(i,sb.toString());
            size=str.length()/2;
            if(max<size){
                max=size;
                maxString = str;
            }
        }
        for(int i=0;i<maxString.length();i++){
            if(maxString.charAt(i)!='$'){
                ans.append(maxString.charAt(i));
            }
        }
        return ans.toString();
    }

    static String calculateSize(int index, String str){
        int i = index-1,j = index+1;
        StringBuilder st = new StringBuilder();
        while(i>-1 && j<str.length() && str.charAt(i)==str.charAt(j)){
            i--;
            j++;
        }
        st.append(str.substring(i+1,j));
        return st.toString();
    }
}
